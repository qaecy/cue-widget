import{a as H,b as U}from"./chunk-XSWNUNXN.js";import{c as S,e as p}from"./chunk-DAQI4YGE.js";import{S as q}from"./chunk-PJ7HGDON.js";import{Eb as j,Fa as l,Gc as d,Hc as _,Ic as g,Nb as E,Ob as F,a as y,b as w,c as C,d as I,ea as c,i as s,ja as a,nc as f,oc as u,pc as R,sb as P}from"./chunk-IVPYXZHS.js";var k=(()=>{class n{_settings=a(p);_headers=d(()=>{let e=new Headers(this._settings.headers());return e.append("Content-Type","application/json"),e.append("Content-Type","application/json"),e});_queryEndpoint=d(()=>this._settings.gatewayURL()+S);ready=d(()=>this._settings.projectId()!==void 0&&this._settings.token()!==void 0);query(e,t="application/sparql-results+json"){return s(this,null,function*(){let r=new Headers(this._headers());r.set("Accept",t),r.set("Content-Type","application/x-www-form-urlencoded");let i=new URLSearchParams;i.append("query",e);let o={method:"POST",headers:r,body:i};return(yield fetch(this._queryEndpoint(),o)).json()})}static \u0275fac=function(t){return new(t||n)};static \u0275prov=c({token:n,factory:n.\u0275fac,providedIn:"root"})}return n})();var Q=(()=>{class n{_fileRepo=a(U);_settings=a(p);_triplestore=a(k);_uploadQueue=l({});entries=l([]);providers=g(()=>Object.keys(this._providerEntries()).map(t=>t===""?{id:t,label:"Default",readonly:!1}:{id:t,label:t,readonly:!0}));provider=g(()=>this.providers().length?this.providers()[0].id:null);eventHandlers=d(()=>{let e={},t=this._settings.privileges();return t.downloadDocuments&&(e.downloadHandler=r=>s(this,null,function*(){return this.downloadFile(r)})),t.renameDocuments&&(e.renameHandler=()=>s(this,null,function*(){return console.warn("Renaming not yet supported")})),t.deleteDocuments&&(e.deleteHandler=()=>s(this,null,function*(){return console.warn("Renaming not yet supported")})),t.uploadDocuments&&(e.uploadHandler=r=>s(this,null,function*(){return this.uploadHandler(r,this.provider()??"")}),e.uploadCancelHandler=r=>s(this,null,function*(){return this.cancelUpload(r)})),console.log(e),e});_contentIRIs={};_providerEntries=l({});x=_(()=>{console.log(this.providers())});onProjectChange=_(()=>{let e=this._settings.projectId();this._triplestore.ready()&&e!==void 0&&this._fetchProjectEntriesAndProviders()});get uploadQueue(){return this._uploadQueue}uploadHandler(e,t){return s(this,null,function*(){{console.log(`Upload for ${e.path} started`);try{let{task:r}=yield this._fileRepo.uploadFile("raw",this._settings.projectId(),t,e);r!==void 0&&(this._monitorProgress(r,e),this._uploadQueue.update(i=>w(y({},i),{[e.path]:r})))}catch(r){throw console.error(r),new Error("Upload failed!")}console.log(`Upload for ${e.path} finished`)}})}cancelUpload(e){let t=this._uploadQueue()[e.path];if(!t)throw new Error("No upload task to cancel");t.cancel(),e.uploadProgress=void 0,this._removeFromQueue(e.path)}pauseUpload(e){return s(this,null,function*(){let t=this._uploadQueue()[e.path];if(!t)throw new Error("No upload task to pause");t.pause()})}resumeUpload(e){return s(this,null,function*(){let t=this._uploadQueue()[e.path];if(!t)throw new Error("No upload task to resume");t.resume()})}downloadFile(e){return s(this,null,function*(){let r=this._contentIRIs[e.path].split("/").pop(),i=e.path.split(".").pop(),o=yield this._fileRepo.getDownloadURL("raw",`${this._settings.projectId()}/${r}.${i}`);o&&window.open(o,"_blank")})}_fetchProjectEntriesAndProviders(){return s(this,null,function*(){let e=`PREFIX qcy: <${H.qcy}>
    SELECT * WHERE {
      ?iri a qcy:FileLocation ;
        qcy:filePath ?path .
      ?content qcy:hasFileLocation ?iri ;
        qcy:mime ?mime ;
        qcy:sizeBytes ?size .
      OPTIONAL{?iri qcy:dateCreated ?created}
      OPTIONAL{?iri qcy:remoteProviderId ?remoteProviderId}
    }`,t=yield this._triplestore.query(e),r={},i=t.results.bindings.map(o=>{let h=o.path.value;this._contentIRIs[h]=o.content.value;let m={path:h,size:parseInt(o.size.value),mimetype:o.mime.value,created:o.created?.value},v=o.remoteProviderId?.value??"";return Object.keys(r).includes(v)?r[v].push(m):r[v]=[m],m});this.entries.update(()=>[...i]),this._providerEntries.update(()=>r)})}_monitorProgress(e,t){e.on("state_changed",r=>{let i=r.bytesTransferred/r.totalBytes*100;t.uploadProgress=i,this._triggerEntriesUpdate()},r=>{console.error("Upload failed for task:",e,r),t.uploadError="Upload failed",this._removeFromQueue(t.path)}),e.then(()=>{this._removeFromQueue(t.path)})}_removeFromQueue(e){this._uploadQueue.update(t=>{let o=t,{[e]:r}=o;return I(o,[C(e)])})}_triggerEntriesUpdate(){this.entries.update(e=>[...e])}static \u0275fac=function(t){return new(t||n)};static \u0275prov=c({token:n,factory:n.\u0275fac,providedIn:"root"})}return n})();var te=(()=>{class n{_settings=a(p);_service=a(Q);entries=this._service.entries;providers=this._service.providers;provider=this._service.provider;userCanCreateProvider=d(()=>this._settings.privileges().createProvider);eventHandlers=this._service.eventHandlers;setEntries(e){console.log("Entries updated"),this.entries.update(()=>[...e])}static \u0275fac=function(t){return new(t||n)};static \u0275cmp=P({type:n,selectors:[["lib-view-file-manager"]],decls:1,vars:5,consts:[[3,"entriesChange","providerChange","providersChange","entries","eventHandlers","userCanCreateProvider","provider","providers"]],template:function(t,r){t&1&&(E(0,"cue-project-files",0),R("entriesChange",function(o){return u(r.entries,o)||(r.entries=o),o})("providerChange",function(o){return u(r.provider,o)||(r.provider=o),o})("providersChange",function(o){return u(r.providers,o)||(r.providers=o),o}),F()),t&2&&(f("entries",r.entries),j("eventHandlers",r.eventHandlers())("userCanCreateProvider",r.userCanCreateProvider()),f("provider",r.provider)("providers",r.providers))},dependencies:[q],encapsulation:2,changeDetection:0})}return n})();export{te as FileManagerComponent};
